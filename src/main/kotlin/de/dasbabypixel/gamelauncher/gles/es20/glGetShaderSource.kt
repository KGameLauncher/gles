package de.dasbabypixel.gamelauncher.gles.es20

interface glGetShaderSource {
    /**
    * Name
    * ----
    * 
    * glGetShaderSource — Returns the source code string from a shader object
    * 
    * C Specification
    * ---------------
    * 
    * | `void **glGetShaderSource**(` | GLuint shader, |
    * | --- | --- |
    * |   | GLsizei bufSize, |
    * |   | GLsizei \*length, |
    * |   | GLchar \*source`)`; |
    * 
    * Parameters
    * ----------
    * 
    * _`shader`_
    * 
    * Specifies the shader object to be queried.
    * 
    * _`bufSize`_
    * 
    * Specifies the size of the character buffer for storing the returned source code string.
    * 
    * _`length`_
    * 
    * Returns the length of the string returned in _`source`_ (excluding the null terminator).
    * 
    * _`source`_
    * 
    * Specifies an array of characters that is used to return the source code string.
    * 
    * Description
    * -----------
    * 
    * `glGetShaderSource` returns the concatenation of the source code strings from the shader object specified by _`shader`_. The source code strings for a shader object are the result of a previous call to [glShaderSource][de.dasbabypixel.gamelauncher.gles.es20.glShaderSource.glShaderSource]. The string returned by the function will be null terminated.
    * 
    * `glGetShaderSource` returns in _`source`_ as much of the source code string as it can, up to a maximum of _`bufSize`_ characters. The number of characters actually returned, excluding the null termination character, is specified by _`length`_. If the length of the returned string is not required, a value of `NULL` can be passed in the _`length`_ argument. The size of the buffer required to store the returned source code string can be obtained by calling [glGetShaderiv][de.dasbabypixel.gamelauncher.gles.es20.glGetShaderiv.glGetShaderiv] with the value `GL_SHADER_SOURCE_LENGTH`.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_VALUE` is generated if _`shader`_ is not a value generated by OpenGL.
    * 
    * `GL_INVALID_OPERATION` is generated if _`shader`_ is not a shader object.
    * 
    * `GL_INVALID_VALUE` is generated if _`bufSize`_ is less than 0.
    * 
    * Associated Gets
    * ---------------
    * 
    * [glGetShaderiv][de.dasbabypixel.gamelauncher.gles.es20.glGetShaderiv.glGetShaderiv] with argument `GL_SHADER_SOURCE_LENGTH`
    * 
    * [glIsShader][de.dasbabypixel.gamelauncher.gles.es20.glIsShader.glIsShader]
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | glGetShaderSource | ✔ | ✔ | ✔ | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glCreateShader][de.dasbabypixel.gamelauncher.gles.es20.glCreateShader.glCreateShader], [glShaderSource][de.dasbabypixel.gamelauncher.gles.es20.glShaderSource.glShaderSource]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 2003-2005 3Dlabs Inc. Ltd. Copyright © 2010-2015 Khronos Group. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1.0, 8 June 1999. [https://opencontent.org/openpub/](https://opencontent.org/openpub/).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es20.glGetShaderSource.glGetShaderSource
    */
    fun glGetShaderSource(shader: UInt, bufSize: UInt, length: java.nio.IntBuffer, source: String)
}