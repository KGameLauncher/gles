package de.dasbabypixel.gamelauncher.gles.es20

interface glUseProgram {
    /**
    * Name
    * ----
    * 
    * glUseProgram — Installs a program object as part of current rendering state
    * 
    * C Specification
    * ---------------
    * 
    * | `void **glUseProgram**(` | GLuint program`)`; |
    * | --- | --- |
    * 
    * Parameters
    * ----------
    * 
    * _`program`_
    * 
    * Specifies the handle of the program object whose executables are to be used as part of current rendering state.
    * 
    * Description
    * -----------
    * 
    * `glUseProgram` installs the program object specified by _`program`_ as part of current rendering state. One or more executables are created in a program object by successfully attaching shader objects to it with [glAttachShader][de.dasbabypixel.gamelauncher.gles.es20.glAttachShader.glAttachShader], successfully compiling the shader objects with [glCompileShader][de.dasbabypixel.gamelauncher.gles.es20.glCompileShader.glCompileShader], and successfully linking the program object with [glLinkProgram][de.dasbabypixel.gamelauncher.gles.es20.glLinkProgram.glLinkProgram].
    * 
    * A program object will contain an executable that will run on the vertex processor if it contains a shader object of type `GL_VERTEX_SHADER` that has been successfully compiled and linked. Similarly, a program object will contain an executable that will run on the fragment processor if it contains a shader object of type `GL_FRAGMENT_SHADER` that has been successfully compiled and linked.
    * 
    * While a program object is in use, applications are free to modify attached shader objects, compile attached shader objects, attach additional shader objects, and detach or delete shader objects. None of these operations will affect the executables that are part of the current state. However, relinking the program object that is currently in use will install the program object as part of the current rendering state if the link operation was successful (see [glLinkProgram][de.dasbabypixel.gamelauncher.gles.es20.glLinkProgram.glLinkProgram] ). If the program object currently in use is relinked unsuccessfully, its link status will be set to `GL_FALSE`, but the executables and associated state will remain part of the current state until a subsequent call to `glUseProgram` removes it from use. After it is removed from use, it cannot be made part of current state until it has been successfully relinked.
    * 
    * If _`program`_ is zero, then the current rendering state refers to an _invalid_ program object and the results of shader execution are undefined. However, this is not an error.
    * 
    * Notes
    * -----
    * 
    * Like buffer and texture objects, the name space for program objects may be shared across a set of contexts, as long as the server sides of the contexts share the same address space. If the name space is shared across contexts, any attached objects and the data associated with those attached objects are shared as well.
    * 
    * Applications are responsible for providing the synchronization across API calls when objects are accessed from different execution threads.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_VALUE` is generated if _`program`_ is neither 0 nor a value generated by OpenGL.
    * 
    * `GL_INVALID_OPERATION` is generated if _`program`_ is not a program object.
    * 
    * `GL_INVALID_OPERATION` is generated if _`program`_ could not be made part of current state.
    * 
    * `GL_INVALID_OPERATION` is generated if transform feedback mode is active and not paused.
    * 
    * Associated Gets
    * ---------------
    * 
    * [glGet][de.dasbabypixel.gamelauncher.gles.es20.glGetBooleanv.glGetBooleanv] with the argument `GL_CURRENT_PROGRAM`
    * 
    * [glGetActiveAttrib][de.dasbabypixel.gamelauncher.gles.es20.glGetActiveAttrib.glGetActiveAttrib] with a valid program object and the index of an active attribute variable
    * 
    * [glGetActiveUniform][de.dasbabypixel.gamelauncher.gles.es20.glGetActiveUniform.glGetActiveUniform] with a valid program object and the index of an active uniform variable
    * 
    * [glGetAttachedShaders][de.dasbabypixel.gamelauncher.gles.es20.glGetAttachedShaders.glGetAttachedShaders] with a valid program object
    * 
    * [glGetAttribLocation][de.dasbabypixel.gamelauncher.gles.es20.glGetAttribLocation.glGetAttribLocation] with a valid program object and the name of an attribute variable
    * 
    * [glGetProgramiv][de.dasbabypixel.gamelauncher.gles.es20.glGetProgramiv.glGetProgramiv] with a valid program object and the parameter to be queried
    * 
    * [glGetProgramInfoLog][de.dasbabypixel.gamelauncher.gles.es20.glGetProgramInfoLog.glGetProgramInfoLog] with a valid program object
    * 
    * [glGetUniform][de.dasbabypixel.gamelauncher.gles.es20.glGetUniformfv.glGetUniformfv] with a valid program object and the location of a uniform variable
    * 
    * [glGetUniformLocation][de.dasbabypixel.gamelauncher.gles.es20.glGetUniformLocation.glGetUniformLocation] with a valid program object and the name of a uniform variable
    * 
    * [glIsProgram][de.dasbabypixel.gamelauncher.gles.es20.glIsProgram.glIsProgram]
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | glUseProgram | ✔ | ✔ | ✔ | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glAttachShader][de.dasbabypixel.gamelauncher.gles.es20.glAttachShader.glAttachShader], [glBindAttribLocation][de.dasbabypixel.gamelauncher.gles.es20.glBindAttribLocation.glBindAttribLocation], [glCompileShader][de.dasbabypixel.gamelauncher.gles.es20.glCompileShader.glCompileShader], [glCreateProgram][de.dasbabypixel.gamelauncher.gles.es20.glCreateProgram.glCreateProgram], [glDeleteProgram][de.dasbabypixel.gamelauncher.gles.es20.glDeleteProgram.glDeleteProgram], [glDetachShader][de.dasbabypixel.gamelauncher.gles.es20.glDetachShader.glDetachShader], [glLinkProgram][de.dasbabypixel.gamelauncher.gles.es20.glLinkProgram.glLinkProgram], [glUniform][de.dasbabypixel.gamelauncher.gles.es20.glUniform1f.glUniform1f], [glValidateProgram][de.dasbabypixel.gamelauncher.gles.es20.glValidateProgram.glValidateProgram], [glVertexAttrib][de.dasbabypixel.gamelauncher.gles.es20.glVertexAttrib1f.glVertexAttrib1f]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 2003-2005 3Dlabs Inc. Ltd. Copyright © 2010-2015 Khronos Group. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1.0, 8 June 1999. [https://opencontent.org/openpub/](https://opencontent.org/openpub/).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es20.glUseProgram.glUseProgram
    */
    fun glUseProgram(program: UInt)
}