package de.dasbabypixel.gamelauncher.gles.es20

interface glShaderSource {
    /**
    * Name
    * ----
    * 
    * glShaderSource — Replaces the source code in a shader object
    * 
    * C Specification
    * ---------------
    * 
    * | `void **glShaderSource**(` | GLuint shader, |
    * | --- | --- |
    * |   | GLsizei count, |
    * |   | const GLchar \*\*string, |
    * |   | const GLint \*length`)`; |
    * 
    * Parameters
    * ----------
    * 
    * _`shader`_
    * 
    * Specifies the handle of the shader object whose source code is to be replaced.
    * 
    * _`count`_
    * 
    * Specifies the number of elements in the _`string`_ and _`length`_ arrays.
    * 
    * _`string`_
    * 
    * Specifies an array of pointers to strings containing the source code to be loaded into the shader.
    * 
    * _`length`_
    * 
    * Specifies an array of string lengths.
    * 
    * Description
    * -----------
    * 
    * `glShaderSource` sets the source code in _`shader`_ to the source code in the array of strings specified by _`string`_. Any source code previously stored in the shader object is completely replaced. The number of strings in the array is specified by _`count`_. If _`length`_ is `NULL`, each string is assumed to be null terminated. If _`length`_ is a value other than `NULL`, it points to an array containing a string length for each of the corresponding elements of _`string`_. Each element in the _`length`_ array may contain the length of the corresponding string (the null character is not counted as part of the string length) or a value less than 0 to indicate that the string is null terminated. The source code strings are not scanned or parsed at this time; they are simply copied into the specified shader object.
    * 
    * Notes
    * -----
    * 
    * The GL copies the shader source code strings when `glShaderSource` is called, so an application may free its copy of the source code strings immediately after the function returns.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_VALUE` is generated if _`shader`_ is not a value generated by OpenGL.
    * 
    * `GL_INVALID_OPERATION` is generated if _`shader`_ is not a shader object.
    * 
    * `GL_INVALID_VALUE` is generated if _`count`_ is less than 0.
    * 
    * Associated Gets
    * ---------------
    * 
    * [glGetShaderiv][de.dasbabypixel.gamelauncher.gles.es20.glGetShaderiv.glGetShaderiv] with arguments _`shader`_ and `GL_SHADER_SOURCE_LENGTH`
    * 
    * [glGetShaderSource][de.dasbabypixel.gamelauncher.gles.es20.glGetShaderSource.glGetShaderSource] with argument _`shader`_
    * 
    * [glIsShader][de.dasbabypixel.gamelauncher.gles.es20.glIsShader.glIsShader]
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | glShaderSource | ✔ | ✔ | ✔ | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glCompileShader][de.dasbabypixel.gamelauncher.gles.es20.glCompileShader.glCompileShader], [glCreateShader][de.dasbabypixel.gamelauncher.gles.es20.glCreateShader.glCreateShader], [glDeleteShader][de.dasbabypixel.gamelauncher.gles.es20.glDeleteShader.glDeleteShader]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 2003-2005 3Dlabs Inc. Ltd. Copyright © 2010-2015 Khronos Group. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1.0, 8 June 1999. [https://opencontent.org/openpub/](https://opencontent.org/openpub/).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es20.glShaderSource.glShaderSource
    */
    fun glShaderSource(shader: UInt, count: UInt, string: Array<String>, length: java.nio.IntBuffer)
}