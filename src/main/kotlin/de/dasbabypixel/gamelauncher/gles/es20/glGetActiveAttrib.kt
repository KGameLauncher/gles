package de.dasbabypixel.gamelauncher.gles.es20

interface glGetActiveAttrib {
    /**
    * Name
    * ----
    * 
    * glGetActiveAttrib — Returns information about an active attribute variable for the specified program object
    * 
    * C Specification
    * ---------------
    * 
    * | `void **glGetActiveAttrib**(` | GLuint program, |
    * | --- | --- |
    * |   | GLuint index, |
    * |   | GLsizei bufSize, |
    * |   | GLsizei \*length, |
    * |   | GLint \*size, |
    * |   | GLenum \*type, |
    * |   | GLchar \*name`)`; |
    * 
    * Parameters
    * ----------
    * 
    * _`program`_
    * 
    * Specifies the program object to be queried.
    * 
    * _`index`_
    * 
    * Specifies the index of the attribute variable to be queried.
    * 
    * _`bufSize`_
    * 
    * Specifies the maximum number of characters OpenGL is allowed to write in the character buffer indicated by _`name`_.
    * 
    * _`length`_
    * 
    * Returns the number of characters actually written by OpenGL in the string indicated by _`name`_ (excluding the null terminator) if a value other than `NULL` is passed.
    * 
    * _`size`_
    * 
    * Returns the size of the attribute variable.
    * 
    * _`type`_
    * 
    * Returns the data type of the attribute variable.
    * 
    * _`name`_
    * 
    * Returns a null terminated string containing the name of the attribute variable.
    * 
    * Description
    * -----------
    * 
    * `glGetActiveAttrib` returns information about an active attribute variable in the program object specified by _`program`_. The number of active attributes can be obtained by calling [glGetProgramiv][de.dasbabypixel.gamelauncher.gles.es20.glGetProgramiv.glGetProgramiv] with the value `GL_ACTIVE_ATTRIBUTES`. A value of zero for _`index`_ selects the first active attribute variable. Permissible values for _`index`_ range from zero to the number of active attribute variables minus one.
    * 
    * Attribute variables have arbitrary names and obtain their values through numbered generic vertex attributes. An attribute variable is considered active if it is determined during the link operation that it may be accessed during program execution. Therefore, _`program`_ should have previously been the target of a call to [glLinkProgram][de.dasbabypixel.gamelauncher.gles.es20.glLinkProgram.glLinkProgram], but it is not necessary for it to have been linked successfully.
    * 
    * The size of the character buffer required to store the longest attribute variable name in _`program`_ can be obtained by calling [glGetProgramiv][de.dasbabypixel.gamelauncher.gles.es20.glGetProgramiv.glGetProgramiv] with the value `GL_ACTIVE_ATTRIBUTE_MAX_LENGTH`. This value should be used to allocate a buffer of sufficient size to store the returned attribute name. The size of this character buffer is passed in _`bufSize`_, and a pointer to this character buffer is passed in _`name`_.
    * 
    * `glGetActiveAttrib` returns the name of the attribute variable indicated by _`index`_, storing it in the character buffer specified by _`name`_. The string returned will be null terminated. The actual number of characters written into this buffer is returned in _`length`_, and this count does not include the null termination character. If the length of the returned string is not required, a value of `NULL` can be passed in the _`length`_ argument.
    * 
    * The _`type`_ argument will return a pointer to the attribute variable's data type. The symbolic constants `GL_FLOAT`, `GL_FLOAT_VEC2`, `GL_FLOAT_VEC3`, `GL_FLOAT_VEC4`, `GL_FLOAT_MAT2`, `GL_FLOAT_MAT3`, `GL_FLOAT_MAT4`, `GL_FLOAT_MAT2x3`, `GL_FLOAT_MAT2x4`, `GL_FLOAT_MAT3x2`, `GL_FLOAT_MAT3x4`, `GL_FLOAT_MAT4x2`, `GL_FLOAT_MAT4x3`, `GL_INT`, `GL_INT_VEC2`, `GL_INT_VEC3`, `GL_INT_VEC4`, `GL_UNSIGNED_INT`, `GL_UNSIGNED_INT_VEC2`, `GL_UNSIGNED_INT_VEC3`, or `GL_UNSIGNED_INT_VEC4` may be returned. The _`size`_ argument will return the size of the attribute, in units of the type returned in _`type`_.
    * 
    * This function will return as much information as it can about the specified active attribute variable. If no information is available, _`length`_ will be 0, and _`name`_ will be an empty string. This situation could occur if this function is called after a link operation that failed. If an error occurs, the return values _`length`_, _`size`_, _`type`_, and _`name`_ will be unmodified.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_VALUE` is generated if _`program`_ is not a value generated by OpenGL.
    * 
    * `GL_INVALID_OPERATION` is generated if _`program`_ is not a program object.
    * 
    * `GL_INVALID_VALUE` is generated if _`index`_ is greater than or equal to the number of active attribute variables in _`program`_.
    * 
    * `GL_INVALID_VALUE` is generated if _`bufSize`_ is less than 0.
    * 
    * Associated Gets
    * ---------------
    * 
    * [glGet][de.dasbabypixel.gamelauncher.gles.es20.glGetBooleanv.glGetBooleanv] with argument `GL_MAX_VERTEX_ATTRIBS`.
    * 
    * [glGetProgramiv][de.dasbabypixel.gamelauncher.gles.es20.glGetProgramiv.glGetProgramiv] with argument `GL_ACTIVE_ATTRIBUTES` or `GL_ACTIVE_ATTRIBUTE_MAX_LENGTH`.
    * 
    * [glIsProgram][de.dasbabypixel.gamelauncher.gles.es20.glIsProgram.glIsProgram]
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | glGetActiveAttrib | ✔ | ✔ | ✔ | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glBindAttribLocation][de.dasbabypixel.gamelauncher.gles.es20.glBindAttribLocation.glBindAttribLocation], [glLinkProgram][de.dasbabypixel.gamelauncher.gles.es20.glLinkProgram.glLinkProgram], [glVertexAttrib][de.dasbabypixel.gamelauncher.gles.es20.glVertexAttrib1f.glVertexAttrib1f], [glVertexAttribPointer][de.dasbabypixel.gamelauncher.gles.es20.glVertexAttribPointer.glVertexAttribPointer]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 2003-2005 3Dlabs Inc. Ltd. Copyright © 2010-2015 Khronos Group. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1.0, 8 June 1999. [https://opencontent.org/openpub/](https://opencontent.org/openpub/).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es20.glGetActiveAttrib.glGetActiveAttrib
    */
    fun glGetActiveAttrib(program: UInt, index: UInt, bufSize: UInt, length: java.nio.IntBuffer, size: java.nio.IntBuffer, type: java.nio.IntBuffer, name: String)
}