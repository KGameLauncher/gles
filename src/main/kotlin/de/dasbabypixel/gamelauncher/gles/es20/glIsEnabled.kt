package de.dasbabypixel.gamelauncher.gles.es20

interface glIsEnabled {
    /**
    * Name
    * ----
    * 
    * glIsEnabled, glIsEnabledi — test whether a capability is enabled
    * 
    * C Specification
    * ---------------
    * 
    * | `GLboolean **glIsEnabled**(` | GLenum cap`)`; |
    * | --- | --- |
    * 
    * | `GLboolean **glIsEnabledi**(` | GLenum cap, |
    * | --- | --- |
    * |   | GLuint index`)`; |
    * 
    * Parameters
    * ----------
    * 
    * _`cap`_
    * 
    * Specifies a symbolic constant indicating a GL capability.
    * 
    * _`index`_
    * 
    * Specifies the index of the capability.
    * 
    * Description
    * -----------
    * 
    * `glIsEnabled` returns `GL_TRUE` if _`cap`_ is an enabled capability and returns `GL_FALSE` otherwise. For `glIsEnabledi`, _`index`_ specifies the index of the capability to test. _`index`_ must be between zero and the count of indexed capabilities for _`cap`_. Initially all capabilities except `GL_DITHER` are disabled; `GL_DITHER` is initially enabled.
    * 
    * The following capabilities are accepted for _`cap`_:
    * 
    * 
    * | **Constant** | **See** |
    * | --- | --- |
    * | `GL_BLEND` | [glBlendFunc][de.dasbabypixel.gamelauncher.gles.es20.glBlendFunc.glBlendFunc] |
    * | `GL_CULL_FACE` | [glCullFace][de.dasbabypixel.gamelauncher.gles.es20.glCullFace.glCullFace] |
    * | `GL_DEBUG_OUTPUT` | [glEnable][de.dasbabypixel.gamelauncher.gles.es20.glEnable.glEnable] |
    * | `GL_DEBUG_OUTPUT_SYNCHRONOUS` | [glEnable][de.dasbabypixel.gamelauncher.gles.es20.glEnable.glEnable] |
    * | `GL_DEPTH_TEST` | [glDepthFunc][de.dasbabypixel.gamelauncher.gles.es20.glDepthFunc.glDepthFunc], [glDepthRangef][de.dasbabypixel.gamelauncher.gles.es20.glDepthRangef.glDepthRangef] |
    * | `GL_DITHER` | [glEnable][de.dasbabypixel.gamelauncher.gles.es20.glEnable.glEnable] |
    * | `GL_POLYGON_OFFSET_FILL` | [glPolygonOffset][de.dasbabypixel.gamelauncher.gles.es20.glPolygonOffset.glPolygonOffset] |
    * | `GL_PRIMITIVE_RESTART_FIXED_INDEX` | [glEnable][de.dasbabypixel.gamelauncher.gles.es20.glEnable.glEnable] |
    * | `GL_RASTERIZER_DISCARD` | [glEnable][de.dasbabypixel.gamelauncher.gles.es20.glEnable.glEnable] |
    * | `GL_SAMPLE_ALPHA_TO_COVERAGE` | [glSampleCoverage][de.dasbabypixel.gamelauncher.gles.es20.glSampleCoverage.glSampleCoverage] |
    * | `GL_SAMPLE_COVERAGE` | [glSampleCoverage][de.dasbabypixel.gamelauncher.gles.es20.glSampleCoverage.glSampleCoverage] |
    * | `GL_SCISSOR_TEST` | [glScissor][de.dasbabypixel.gamelauncher.gles.es20.glScissor.glScissor] |
    * | `GL_STENCIL_TEST` | [glStencilFunc][de.dasbabypixel.gamelauncher.gles.es20.glStencilFunc.glStencilFunc], [glStencilOp][de.dasbabypixel.gamelauncher.gles.es20.glStencilOp.glStencilOp] |
    * 
    * Notes
    * -----
    * 
    * If an error is generated, `glIsEnabled` and `glIsEnabledi` return `GL_FALSE`.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_ENUM` is generated if _`cap`_ is not an accepted value.
    * 
    * `GL_INVALID_VALUE` is generated by `glIsEnabledi` if _`index`_ is outside the valid range for the indexed state _`cap`_.
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | glIsEnabled | ✔ | ✔ | ✔ | ✔ |
    * | glIsEnabledi | \- | \- | \- | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glEnable][de.dasbabypixel.gamelauncher.gles.es20.glEnable.glEnable], [glDisable][de.dasbabypixel.gamelauncher.gles.es20.glEnable.glEnable], [glGet][de.dasbabypixel.gamelauncher.gles.es20.glGetBooleanv.glGetBooleanv]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 1991-2006 Silicon Graphics, Inc. Copyright © 2010-2015 Khronos Group. This document is licensed under the SGI Free Software B License. For details, see [https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt](https://khronos.org/registry/OpenGL-Refpages/LICENSES/LicenseRef-FreeB.txt).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es20.glIsEnabled.glIsEnabled
    * @see de.dasbabypixel.gamelauncher.gles.es32.glIsEnabledi.glIsEnabledi
    */
    fun glIsEnabled(cap: Int): Boolean
}