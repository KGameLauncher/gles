package de.dasbabypixel.gamelauncher.gles.es20

interface glGetShaderInfoLog {
    /**
    * Name
    * ----
    * 
    * glGetShaderInfoLog — Returns the information log for a shader object
    * 
    * C Specification
    * ---------------
    * 
    * | `void **glGetShaderInfoLog**(` | GLuint shader, |
    * | --- | --- |
    * |   | GLsizei maxLength, |
    * |   | GLsizei \*length, |
    * |   | GLchar \*infoLog`)`; |
    * 
    * Parameters
    * ----------
    * 
    * _`shader`_
    * 
    * Specifies the shader object whose information log is to be queried.
    * 
    * _`maxLength`_
    * 
    * Specifies the size of the character buffer for storing the returned information log.
    * 
    * _`length`_
    * 
    * Returns the length of the string returned in _`infoLog`_ (excluding the null terminator).
    * 
    * _`infoLog`_
    * 
    * Specifies an array of characters that is used to return the information log.
    * 
    * Description
    * -----------
    * 
    * `glGetShaderInfoLog` returns the information log for the specified shader object. The information log for a shader object is modified when the shader is compiled. The string that is returned will be null terminated.
    * 
    * `glGetShaderInfoLog` returns in _`infoLog`_ as much of the information log as it can, up to a maximum of _`maxLength`_ characters. The number of characters actually returned, excluding the null termination character, is specified by _`length`_. If the length of the returned string is not required, a value of `NULL` can be passed in the _`length`_ argument. The size of the buffer required to store the returned information log can be obtained by calling [glGetShaderiv][de.dasbabypixel.gamelauncher.gles.es20.glGetShaderiv.glGetShaderiv] with the value `GL_INFO_LOG_LENGTH`.
    * 
    * The information log for a shader object is a string that may contain diagnostic messages, warning messages, and other information about the last compile operation. When a shader object is created, its information log will be a string of length 0.
    * 
    * Notes
    * -----
    * 
    * The information log for a shader object is the OpenGL implementer's primary mechanism for conveying information about the compilation process. Therefore, the information log can be helpful to application developers during the development process, even when compilation is successful. Application developers should not expect different OpenGL implementations to produce identical information logs.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_VALUE` is generated if _`shader`_ is not a value generated by OpenGL.
    * 
    * `GL_INVALID_OPERATION` is generated if _`shader`_ is not a shader object.
    * 
    * `GL_INVALID_VALUE` is generated if _`maxLength`_ is less than 0.
    * 
    * Associated Gets
    * ---------------
    * 
    * [glGetShaderiv][de.dasbabypixel.gamelauncher.gles.es20.glGetShaderiv.glGetShaderiv] with argument `GL_INFO_LOG_LENGTH`
    * 
    * [glIsShader][de.dasbabypixel.gamelauncher.gles.es20.glIsShader.glIsShader]
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | glGetShaderInfoLog | ✔ | ✔ | ✔ | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glCompileShader][de.dasbabypixel.gamelauncher.gles.es20.glCompileShader.glCompileShader], [glGetProgramInfoLog][de.dasbabypixel.gamelauncher.gles.es20.glGetProgramInfoLog.glGetProgramInfoLog], [glLinkProgram][de.dasbabypixel.gamelauncher.gles.es20.glLinkProgram.glLinkProgram], [glValidateProgram][de.dasbabypixel.gamelauncher.gles.es20.glValidateProgram.glValidateProgram]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 2003-2005 3Dlabs Inc. Ltd. Copyright © 2010-2015 Khronos Group. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1.0, 8 June 1999. [https://opencontent.org/openpub/](https://opencontent.org/openpub/).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es20.glGetShaderInfoLog.glGetShaderInfoLog
    */
    fun glGetShaderInfoLog(shader: UInt, maxLength: UInt, length: java.nio.IntBuffer, infoLog: String)
}