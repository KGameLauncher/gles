package de.dasbabypixel.gamelauncher.gles.es30

interface glBeginTransformFeedback {
    /**
    * Name
    * ----
    * 
    * glBeginTransformFeedback — start transform feedback operation
    * 
    * C Specification
    * ---------------
    * 
    * | `void **glBeginTransformFeedback**(` | GLenum primitiveMode`)`; |
    * | --- | --- |
    * 
    * | `void **glEndTransformFeedback**(` | void`)`; |
    * | --- | --- |
    * 
    * Parameters for `glBeginTransformFeedback`
    * -----------------------------------------
    * 
    * _`primitiveMode`_
    * 
    * Specify the output type of the primitives that will be recorded into the buffer objects that are bound for transform feedback.
    * 
    * Description
    * -----------
    * 
    * Transform feedback mode captures the values of varying variables written by the vertex shader (or, if active, the geometry shader). Transform feedback is said to be active after a call to `glBeginTransformFeedback` until a subsequent call to `glEndTransformFeedback`. Transform feedback commands must be paired. An implicit [glResumeTransformFeedback][de.dasbabypixel.gamelauncher.gles.es30.glResumeTransformFeedback.glResumeTransformFeedback] is performed by `glEndTransformFeedback` if the transform feedback is paused. Transform feedback is restricted to non-indexed `GL_POINTS`, `GL_LINES`, and `GL_TRIANGLES`.
    * 
    * If no geometry shader is present, while transform feedback is active the _`mode`_ parameter to [glDrawArrays][de.dasbabypixel.gamelauncher.gles.es20.glDrawArrays.glDrawArrays] and other drawing commands must match those specified in the following table:
    * 
    * 
    * | **Transform Feedback _`primitiveMode`_** | **Allowed Render Primitive _`modes`_** |
    * | --- | --- |
    * | `GL_POINTS` | `GL_POINTS` |
    * | `GL_LINES` | `GL_LINES`, `GL_LINE_LOOP`, `GL_LINE_STRIP`, `GL_LINES_ADJACENCY`, `GL_LINE_STRIP_ADJACENCY` |
    * | `GL_TRIANGLES` | `GL_TRIANGLES`, `GL_TRIANGLE_STRIP`, `GL_TRIANGLE_FAN`, `GL_TRIANGLES_ADJACENCY`, `GL_TRIANGLE_STRIP_ADJACENCY` |
    * 
    * If a geometry shader is present, the output primitive type from the geometry shader must match those provided in the following table:
    * 
    * 
    * | **Transform Feedback _`primitiveMode`_** | **Allowed Geometry Shader Output Primitive Type** |
    * | --- | --- |
    * | `GL_POINTS` | `points` |
    * | `GL_LINES` | `line_strip` |
    * | `GL_TRIANGLES` | `triangle_strip` |
    * 
    * Notes
    * -----
    * 
    * Geometry shaders, and the `GL_TRIANGLES_ADJACENCY`, `GL_TRIANGLE_STRIP_ADJACENCY`, `GL_LINES_ADJACENCY` and `GL_LINE_STRIP_ADJACENCY` primtive modes are available only if the GL ES version is 3.2 or greater.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_OPERATION` is generated if `glBeginTransformFeedback` is executed while transform feedback is active.
    * 
    * `GL_INVALID_ENUM` is generated by `glBeginTransformFeedback` if _`primitiveMode`_ is not one of `GL_POINTS`, `GL_LINES`, or `GL_TRIANGLES`.
    * 
    * `GL_INVALID_OPERATION` is generated if `glEndTransformFeedback` is executed while transform feedback is not active.
    * 
    * `GL_INVALID_OPERATION` is generated by [glDrawArrays][de.dasbabypixel.gamelauncher.gles.es20.glDrawArrays.glDrawArrays] and other drawing commands if transform feedback is active and _`mode`_ is not compatible with _`primitiveMode`_ as described above.
    * 
    * `GL_INVALID_OPERATION` is generated by `glBeginTransformFeedback` if any binding point used in transform feedback mode does not have a buffer object bound. In interleaved mode, only the first buffer object binding point is ever written to.
    * 
    * `GL_INVALID_OPERATION` is generated by `glBeginTransformFeedback` if no binding points would be used, either because no program object is active of because the active program object has specified no varying variables to record.
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | `glBeginTransformFeedback` | \- | ✔ | ✔ | ✔ |
    * | `glEndTransformFeedback` | \- | ✔ | ✔ | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glPauseTransformFeedback][de.dasbabypixel.gamelauncher.gles.es30.glPauseTransformFeedback.glPauseTransformFeedback], [glResumeTransformFeedback][de.dasbabypixel.gamelauncher.gles.es30.glResumeTransformFeedback.glResumeTransformFeedback]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 2010-2015 Khronos Group. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1.0, 8 June 1999. [https://opencontent.org/openpub/](https://opencontent.org/openpub/).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es30.glBeginTransformFeedback.glBeginTransformFeedback
    * @see de.dasbabypixel.gamelauncher.gles.es30.glEndTransformFeedback.glEndTransformFeedback
    */
    fun glBeginTransformFeedback(primitiveMode: Int)
}