package de.dasbabypixel.gamelauncher.gles.es30

interface glClearBufferuiv {
    /**
    * Name
    * ----
    * 
    * glClearBuffer — clear individual buffers of the currently bound draw framebuffer
    * 
    * C Specification
    * ---------------
    * 
    * | `void **glClearBufferiv**(` | GLenum buffer, |
    * | --- | --- |
    * |   | GLint drawBuffer, |
    * |   | const GLint \* value`)`; |
    * 
    * | `void **glClearBufferuiv**(` | GLenum buffer, |
    * | --- | --- |
    * |   | GLint drawBuffer, |
    * |   | const GLuint \* value`)`; |
    * 
    * | `void **glClearBufferfv**(` | GLenum buffer, |
    * | --- | --- |
    * |   | GLint drawBuffer, |
    * |   | const GLfloat \* value`)`; |
    * 
    * | `void **glClearBufferfi**(` | GLenum buffer, |
    * | --- | --- |
    * |   | GLint drawBuffer, |
    * |   | GLfloat depth, |
    * |   | GLint stencil`)`; |
    * 
    * Parameters
    * ----------
    * 
    * _`buffer`_
    * 
    * Specify the buffer to clear.
    * 
    * _`drawBuffer`_
    * 
    * Specify a particular draw buffer to clear.
    * 
    * _`value`_
    * 
    * For color buffers, a pointer to a four-element vector specifying R, G, B and A values to clear the buffer to. For depth buffers, a pointer to a single depth value to clear the buffer to. For stencil buffers, a pointer to a single stencil value to clear the buffer to.
    * 
    * _`depth`_
    * 
    * The value to clear a depth render buffer to.
    * 
    * _`stencil`_
    * 
    * The value to clear a stencil render buffer to.
    * 
    * Description
    * -----------
    * 
    * `glClearBuffer*` clears the specified buffer to the specified value(s). If _`buffer`_ is `GL_COLOR`, a particular draw buffer `GL_DRAWBUFFER`_`i`_ is specified by passing _`i`_ as _`drawBuffer`_. In this case, _`value`_ points to a four-element vector specifying the R, G, B and A color to clear that draw buffer to. The `glClearBufferfv`, `glClearBufferiv`, and `glClearBufferuiv` commands should be used to clear fixed- and floating-point, signed integer, and unsigned integer color buffers respectively. Clamping and conversion for fixed-point color buffers are performed in the same fashion as [glClearColor][de.dasbabypixel.gamelauncher.gles.es20.glClearColor.glClearColor].
    * 
    * If _`buffer`_ is `GL_DEPTH`, _`drawBuffer`_ must be zero, and _`value`_ points to a single value to clear the depth buffer to. Only `glClearBufferfv` should be used to clear depth buffers. Clamping and conversion for fixed-point depth buffers are performed in the same fashion as [glClearDepthf][de.dasbabypixel.gamelauncher.gles.es20.glClearDepthf.glClearDepthf].
    * 
    * If _`buffer`_ is `GL_STENCIL`, _`drawBuffer`_ must be zero, and _`value`_ points to a single value to clear the stencil buffer to. Only `glClearBufferiv` should be used to clear stencil buffers. Masking and type conversion are performed in the same fashion as [glClearStencil][de.dasbabypixel.gamelauncher.gles.es20.glClearStencil.glClearStencil].
    * 
    * `glClearBufferfi` may be used to clear the depth and stencil buffers. _`buffer`_ must be `GL_DEPTH_STENCIL` and _`drawBuffer`_ must be zero. _`depth`_ and _`stencil`_ are the depth and stencil values, respectively.
    * 
    * The result of `glClearBuffer` is undefined if no conversion between the type of _`value`_ and the buffer being cleared is defined. However, this is not an error.
    * 
    * Errors
    * ------
    * 
    * `GL_INVALID_ENUM` is generated by `glClearBufferiv` if _`buffer`_ is not `GL_COLOR` or `GL_STENCIL`.
    * 
    * `GL_INVALID_ENUM` is generated by `glClearBufferfv` if _`buffer`_ is not `GL_COLOR` or `GL_DEPTH`.
    * 
    * `GL_INVALID_ENUM` is generated by `glClearBufferuiv` if _`buffer`_ is not `GL_COLOR`.
    * 
    * `GL_INVALID_ENUM` is generated by `glClearBufferfi` if _`buffer`_ is not `GL_DEPTH_STENCIL`.
    * 
    * `GL_INVALID_VALUE` is generated if _`buffer`_ is `GL_COLOR` and _`drawBuffer`_ is greater than or equal to `GL_MAX_DRAW_BUFFERS`.
    * 
    * `GL_INVALID_VALUE` is generated if _`buffer`_ is `GL_DEPTH`, `GL_STENCIL` or `GL_DEPTH_STENCIL` and _`drawBuffer`_ is not zero.
    * 
    * API Version Support
    * -------------------
    * 
    * 
    * |  | **OpenGL ES API Version** |  |  |  |
    * | --- | --- | --- | --- | --- |
    * | **Function Name** | **2.0** | **3.0** | **3.1** | **3.2** |
    * | `glClearBufferiv` | \- | ✔ | ✔ | ✔ |
    * | `glClearBufferuiv` | \- | ✔ | ✔ | ✔ |
    * | `glClearBufferfv` | \- | ✔ | ✔ | ✔ |
    * | `glClearBufferfi` | \- | ✔ | ✔ | ✔ |
    * 
    * See Also
    * --------
    * 
    * [glClearColor][de.dasbabypixel.gamelauncher.gles.es20.glClearColor.glClearColor], [glClearDepthf][de.dasbabypixel.gamelauncher.gles.es20.glClearDepthf.glClearDepthf], [glClearStencil][de.dasbabypixel.gamelauncher.gles.es20.glClearStencil.glClearStencil], [glClear][de.dasbabypixel.gamelauncher.gles.es20.glClear.glClear]
    * 
    * Copyright
    * ---------
    * 
    * Copyright © 2010-2015 Khronos Group. This material may be distributed subject to the terms and conditions set forth in the Open Publication License, v 1.0, 8 June 1999. [https://opencontent.org/openpub/](https://opencontent.org/openpub/).
    * 
    * @see de.dasbabypixel.gamelauncher.gles.es30.glClearBufferiv.glClearBufferiv
    * @see de.dasbabypixel.gamelauncher.gles.es30.glClearBufferuiv.glClearBufferuiv
    * @see de.dasbabypixel.gamelauncher.gles.es30.glClearBufferfv.glClearBufferfv
    * @see de.dasbabypixel.gamelauncher.gles.es30.glClearBufferfi.glClearBufferfi
    */
    fun glClearBufferuiv(buffer: Int, drawBuffer: Int, value: de.dasbabypixel.gamelauncher.buffers.IntBufferRO)
}